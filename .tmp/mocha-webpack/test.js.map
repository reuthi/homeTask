{"version":3,"sources":["webpack:///webpack/bootstrap 0d2e9fb395ee9d6c4e19","webpack:///external \"request-promise\"","webpack:///./test.js","webpack:///external \"chai\"","webpack:///../controllers/weather.controller.js","webpack:///external \"bluebird\"","webpack:///../config/config.js","webpack:///../controllers/country.controller.js"],"names":["describe","it","done","countries","getCountries","sortedCountries","getWeather","console","log","expect","to","have","all","deep","keys","Promise","mapSeries","country","capital","rp","url","config","weatherAppId","then","weather","JSON","parse","name","weatherForecast","main","weatherTemperature","temp","filter","port","process","env","PORT","continent","method","res"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AC7DA,4C;;;;;;;;;;;;ACAA;AACA;AACA;;AAEAA,SAAS,gCAAT,EAA2C,YAAM;AAC/CC,uDAAqD,gBAAOC,IAAP,EAAgB;AACnE,QAAMC,YAAY,MAAM,6FAAAC,CAAa,UAAb,CAAxB;AACA,QAAMC,kBAAkB,MAAM,2FAAAC,CAAWH,SAAX,CAA9B;AACAI,YAAQC,GAAR,CAAY,iBAAZ,EAA8BH,eAA9B;AACAI,IAAA,oDAAAA,CAAOJ,eAAP,EAAwBK,EAAxB,CAA2BC,IAA3B,CAAgCC,GAAhC,CAAoCC,IAApC,CAAyCC,IAAzC,CAA8C,SAA9C,EAAyD,SAAzD,EAAoE,iBAApE,EAAuF,oBAAvF;AACAZ;AACD,GAND;AAOD,CARD,E;;;;;;ACJA,iC;;;;;;;;;;;;;ACAA;AACA;AACA;;AAEO,IAAMI,aAAa,eAAbA,UAAa,CAAOH,SAAP,EAAqB;AAC7C,MAAIE,kBAAkB,MAAM,gDAAAU,CAAQC,SAAR,CAAkBb,SAAlB,EAA6B,gBAAMc,OAAN,EAAiB;AACxE,QAAGA,QAAQC,OAAX,EAAmB;AACjB,aAAO,MAAM,uDAAAC,CAAG;AACdC,mEAAyDH,QAAQC,OAAjE,eAAkF,8DAAAG,CAAOC,YAAzF;AADc,OAAH,EAEVC,IAFU,CAEL,mBAAW;AACjBC,kBAAUC,KAAKC,KAAL,CAAWF,OAAX,CAAV;AACA,eAAO;AACLP,mBAASA,QAAQU,IADZ;AAELT,mBAASD,QAAQC,OAFZ;AAGLU,2BAAiBJ,QAAQA,OAAR,CAAgB,CAAhB,EAAmBK,IAH/B;AAILC,8BAAoBN,QAAQK,IAAR,CAAaE;AAJ5B,SAAP;AAMD,OAVY,CAAb;AAWD;AACF,GAd2B,CAA5B;AAeA,SAAO1B,gBAAgB2B,MAAhB,CAAuB;AAAA,WAASf,OAAT;AAAA,GAAvB,CAAP;AACD,CAjBM,C;;;;;;ACJP,qC;;;;;;;;ACAO,IAAMI,SAAS;AACpBC,gBAAa,kCADO;AAEpBW,QAAMC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB;AAFN,CAAf,C;;;;;;;;;;ACAP;;AAEO,IAAMhC,eAAe,eAAfA,YAAe,CAAOiC,SAAP,EAAqB;AAC/C,SAAO,MAAM,uDAAAlB,CAAG;AACdmB,YAAQ,KADM;AAEdlB,sDAAgDiB;AAFlC,GAAH,EAGVd,IAHU,CAGL;AAAA,WAAKE,KAAKC,KAAL,CAAWa,GAAX,CAAL;AAAA,GAHK,CAAb;AAID,CALM,C","file":"test.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0d2e9fb395ee9d6c4e19","module.exports = require(\"request-promise\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"request-promise\"\n// module id = 0\n// module chunks = 0","import { expect } from 'chai'\r\nimport { getWeather } from '../controllers/weather.controller'\r\nimport { getCountries } from '../controllers/country.controller'\r\n\r\ndescribe(\"testing the weather controller\", () => {\r\n  it(`should return json with all the requested keys`, async (done) => {\r\n    const countries = await getCountries('Americas')\r\n    const sortedCountries = await getWeather(countries)\r\n    console.log('sortedCountries',sortedCountries)\r\n    expect(sortedCountries).to.have.all.deep.keys('country', 'capital', 'weatherForecast', 'weatherTemperature')\r\n    done()\r\n  })\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./test.js","module.exports = require(\"chai\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"chai\"\n// module id = 2\n// module chunks = 0","import rp from 'request-promise'\r\nimport Promise from 'bluebird'\r\nimport { config } from '../config/config'\r\n\r\nexport const getWeather = async (countries) => {\r\n  let sortedCountries = await Promise.mapSeries(countries, async country => {\r\n    if(country.capital){\r\n      return await rp({\r\n        url: `http://api.openweathermap.org/data/2.5/weather?q=${country.capital}&APPID=${config.weatherAppId}&units=metric`\r\n      }).then(weather => {\r\n        weather = JSON.parse(weather)\r\n        return {\r\n          country: country.name,\r\n          capital: country.capital,\r\n          weatherForecast: weather.weather[0].main,\r\n          weatherTemperature: weather.main.temp\r\n        }\r\n      })\r\n    }\r\n  })\r\n  return sortedCountries.filter(country=>country)\r\n}\n\n\n// WEBPACK FOOTER //\n// ../controllers/weather.controller.js","module.exports = require(\"bluebird\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"bluebird\"\n// module id = 4\n// module chunks = 0","export const config = { \r\n  weatherAppId:'2ad061981457f03dc56e37cea31924eb',\r\n  port: process.env.PORT || 8080\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ../config/config.js","import rp from 'request-promise'\r\n\r\nexport const getCountries = async (continent) => {\r\n  return await rp({\r\n    method: 'GET',\r\n    url: `https://restcountries.eu/rest/v2/region/${continent}`\r\n  }).then(res=>JSON.parse(res))\r\n}\n\n\n// WEBPACK FOOTER //\n// ../controllers/country.controller.js"],"sourceRoot":""}